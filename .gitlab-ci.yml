stages:
- code analysis
- test
- deploy

variables:
  GET_SOURCES_ATTEMPTS: 3
  PIP_INDEX: https://nexus.web.sandia.gov/repository/pypi-proxy/pypi
  PIP_INDEX_URL: https://nexus.web.sandia.gov/repository/pypi-proxy/simple
  PIP_TRUSTED_HOST: nexus.web.sandia.gov
  STD_PIP_ARGS: "--trusted-host pypi.org --trusted-host pypi.python.org --trusted-host files.pythonhosted.org"
  CEE_PYTHON3: /usr/local/anaconda/3-2024.02/bin/python3
  CTS1_PYTHON3: /projects/aue/hpc/builds/x86_64/rhel8/f6a36cb8/tooling-sprint-24.02/install/linux-rhel8-x86_64/gcc-10.3.0/python-3.11.6-qvlrkva/bin/python3


before_script:
- $CEE_PYTHON3 -m venv venv
- source venv/bin/activate
- python3 --version


test::unit:
  stage: test
  tags:
  - cee.build
  script:
  - module use /projects/aue/modules/cee/x86_64/rhel8 > /dev/null 2>&1 || true
  - module load aue/cmake/3.27.7
  - module load aue/gcc/12.1.0
  - module load aue/openmpi/4.1.6-gcc-12.1.0
  - python3 -m pip install $STD_PIP_ARGS -e .[dev]
  - pytest tests
  rules:
  - if: $RUN_UNIT_TESTS
    when: always


test::coverage:
  stage: test
  tags:
  - cee.build
  script:
  - module use /projects/aue/modules/cee/x86_64/rhel8 > /dev/null 2>&1 || true
  - module load aue/cmake/3.27.7
  - module load aue/gcc/12.1.0
  - module load aue/openmpi/4.1.6-gcc-12.1.0
  - python3 -m pip install $STD_PIP_ARGS -e .[dev]
  - coverage run
  - coverage report
  - coverage xml
  rules:
  - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    when: always
  coverage: '/TOTAL.*? (100(?:\.0+)?\%\|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    when: always
    reports:
      coverage_report:
        path: coverage.xml
        coverage_format: cobertura


test::integration::flux:
  stage: test
  tags:
  - cee.build
  script:
  - module use /projects/aue/modules/cee/x86_64/rhel8 > /dev/null 2>&1 || true
  - module load aue/flux-core
  - module load aue/cmake/3.27.7
  - module load aue/gcc/12.1.0
  - module load aue/openmpi/4.1.6-gcc-12.1.0
  - python3 -m pip install $STD_PIP_ARGS -e .[dev]
  - exit_code=0
  - flux start canary run -w -b scheduler=flux -b scheme=isolated_sets ./examples || exit_code=$?
  - if [ "${exit_code}" -ne 30 ]; then exit 1; fi
  - exit_code=0
  - flux start canary run -w -b scheduler=flux -b count=2 ./examples || exit_code=$?
  - if [ "${exit_code}" -ne 30 ]; then exit 1; fi
  rules:
    when: never
#  - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
#    when: always


test::integration::slurm:
  stage: test
  tags:
  - jetcool
  before_script:
  - $CTS1_PYTHON3 -m venv venv
  - source venv/bin/activate
  - python3 --version
  script:
  - module use /apps/modules/modulefiles-apps > /dev/null 2>&1 || true
  - module load aue/cmake/3.27.7
  - module load aue/gcc/12.1.0
  - module load aue/openmpi/4.1.6-gcc-12.1.0
  - python3 -m pip install $STD_PIP_ARGS -e .[dev]
  - exit_code=0
  - canary run -w -b scheduler=slurm ./examples || exit_code=$?
  - if [ "${exit_code}" -ne 30 ]; then exit 1; fi
  - canary -C TestResults report junit create -o $CI_PROJECT_DIR/junit.xml || true
  - canary -C TestResults report cdash create -d $CI_PROJECT_DIR/xml || true
  rules:
  - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    when: always
  artifacts:
    when: always
    paths:
    - junit.xml
    reports:
      junit: junit.xml


test::integration::shell:
  stage: test
  tags:
  - cee.build
  before_script:
  - $CEE_PYTHON3 -m venv venv
  - source venv/bin/activate
  - python3 --version
  script:
  - module use /projects/aue/modules/cee/x86_64/rhel8 > /dev/null 2>&1 || true
  - module load aue/cmake/3.27.7
  - module load aue/gcc/12.1.0
  - module load aue/openmpi/4.1.6-gcc-12.1.0
  - python3 -m pip install $STD_PIP_ARGS -e .[dev]
  - exit_code=0
  - canary run -w -b scheduler=shell -b count=2 ./examples || exit_code=$?
  - if [ "${exit_code}" -ne 30 ]; then exit 1; fi
  - canary -C TestResults report junit create -o $CI_PROJECT_DIR/junit.xml || true
  - canary -C TestResults report cdash create -d $CI_PROJECT_DIR/xml || true
  rules:
  - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    when: always
  artifacts:
    when: always
    paths:
    - junit.xml
    reports:
      junit: junit.xml


test::integration::local:
  stage: test
  tags:
  - cee.build
  before_script:
  - $CEE_PYTHON3 -m venv venv
  - source venv/bin/activate
  - python3 --version
  script:
  - module use /projects/aue/modules/cee/x86_64/rhel8 > /dev/null 2>&1 || true
  - module load aue/cmake/3.27.7
  - module load aue/gcc/12.1.0
  - module load aue/openmpi/4.1.6-gcc-12.1.0
  - python3 -m pip install $STD_PIP_ARGS -e .[dev]
  - exit_code=0
  - canary run -w ./examples || exit_code=$?
  - if [ "${exit_code}" -ne 30 ]; then exit 1; fi
  - canary -C TestResults report junit create -o $CI_PROJECT_DIR/junit.xml || true
  - canary -C TestResults report cdash create -d $CI_PROJECT_DIR/xml || true
  rules:
  - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    when: always
  artifacts:
    when: always
    paths:
    - junit.xml
    reports:
      junit: junit.xml


test::plugin::yaml:
  stage: test
  tags:
  - cee.build
  before_script:
  - $CEE_PYTHON3 -m venv venv
  - source venv/bin/activate
  - python3 --version
  script:
  - module use /projects/aue/modules/cee/x86_64/rhel8 > /dev/null 2>&1 || true
  - python3 -m pip install $STD_PIP_ARGS -e .[dev]
  - git clone git@cee-gitlab.sandia.gov:ascic-test-infra/plugins/canary-yaml.git
  # test -p PLUGIN_NAME
  - PYTHONPATH=`pwd`/canary-yaml/src canary -p canary_yaml run -w ./canary-yaml/tests
  - cd canary-yaml
  - python3 -m pip install --no-deps .
  - cd $CI_PROJECT_DIR
  - canary run -w ./canary-yaml/tests
  rules:
  - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    when: always


lint::check:
  stage: code analysis
  tags:
  - cee.build
  script:
  - python3 -m pip install $STD_PIP_ARGS ruff
  - ruff --version
  - git fetch origin "${CI_MERGE_REQUEST_TARGET_BRANCH_NAME:?}"
  - ./bin/ci/ruff-check --ref="origin/${CI_MERGE_REQUEST_TARGET_BRANCH_NAME:?}" --output-format=junit --output-file=ruff.xml
  - cat ruff.xml
  rules:
  - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    when: always
  artifacts:
    when: always
    reports:
      junit: ruff.xml


lint::format:
  stage: code analysis
  tags:
  - cee.build
  script:
  - python3 -m pip install $STD_PIP_ARGS ruff
  - ruff --version
  - git fetch origin "${CI_MERGE_REQUEST_TARGET_BRANCH_NAME:?}"
  - ./bin/ci/ruff-format --ref="origin/${CI_MERGE_REQUEST_TARGET_BRANCH_NAME:?}" --check
  rules:
  - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    when: always


lint::type_checking:
  stage: code analysis
  tags:
  - cee.build
  script:
  - python3 -m pip install $STD_PIP_ARGS -e .[dev]
  - python3 -m pip install $STD_PIP_ARGS mypy mypy-gitlab-code-quality
  - mypy ./src --no-error-summary > mypy-out.txt || true
  - mypy-gitlab-code-quality < mypy-out.txt > codequality.json
  rules:
  - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    when: always
  artifacts:
    when: always
    reports:
      codequality: codequality.json
  rules:
  - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    when: always


.pages:
  stage: deploy
  tags:
  - cee.build
  script:
  - python3 -m pip install $STD_PIP_ARGS .[dev]
  - cd docs
  - make clean_cache
  - make clean
  - make html
  - make html
  - cd ..
  - rm -rf public
  - mv docs/build/html public
  - deactivate


pages:
  extends: .pages
  variables:
    GIT_STRATEGY: clone
  before_script:
  # make sure to install from main to get the right version number
  - git checkout main
  - git pull
  - git fetch --tags
  - $CEE_PYTHON3 -m venv venv
  - source venv/bin/activate
  - python3 --version
  rules:
  - if: ($CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "main")
    changes:
    - src/nvtest/directives.py
    - src/_nvtest/plugins/commands/*.py
    - docs/*.rst
    - docs/*/*.rst
    - docs/**/*.rst
    - docs/Makefile
    - docs/source/conf.py
    - docs/source/dot/*.png
    - docs/source/images/*.png
    when: always
  - if: $BUILD_PAGES
    when: always
  artifacts:
    paths:
    - public


mr-pages:
  extends: .pages
  rules:
  - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    changes:
    - src/nvtest/directives.py
    - src/_nvtest/plugins/commands/*.py
    - docs/*.rst
    - docs/*/*.rst
    - docs/**/*.rst
    - docs/Makefile
    - docs/source/conf.py
    - docs/source/dot/*.png
    - docs/source/images/*.png
    when: always
