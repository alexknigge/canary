#!/usr/bin/env python3

import argparse
import subprocess
import sys


def ruff(command: str, *options: str) -> int:
    args = ["ruff", command]
    args.extend(options)
    proc = subprocess.Popen(args)
    proc.wait()
    return proc.returncode


def find_changed_python_files(ref: str) -> list[str]:
    changed_python_files: list[str] = []
    output = subprocess.getoutput(f"git diff --name-status {ref}")
    for line in output.split("\n"):
        try:
            status, filename = line.split()
        except ValueError:
            continue
        if filename.endswith((".py", ".pyt")) and status != "D":
            changed_python_files.append(filename)
    return changed_python_files


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("--ref", help="Check python files changed since REF")
    parser.add_argument(
        "remainder",
        metavar="ruff-args",
        help="Arguments to pass through to rufff",
        nargs=argparse.REMAINDER,
    )
    args = parser.parse_args()
    ruff_args: list[str] = []
    if not args.remainder:
        parser.print_help()
        parser.exit(0)
    ruff_args.extend(args.remainder)
    if args.ref:
        changed_python_files = find_changed_python_files(args.ref)
        if not changed_python_files:
            print("No changed python files")
            return 0
        s = "\n- ".join(changed_python_files)
        print(f"Changed python files:\n- {s}")
        ruff_args.extend(changed_python_files)
    rc = ruff(ruff_args[0], *ruff_args[1:])
    return rc


if __name__ == "__main__":
    sys.exit(main())
