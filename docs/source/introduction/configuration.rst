.. _introduction-config:

Configuration settings
======================

Additional configuration is not required to run ``nvtest``.  To see the current configuration, issue

.. command-output:: nvtest config show
   :ellipsis: 4

Configuration variables can be set on the command line or read from a
configuration file.

.. _introduction-config-file:

Configuration file
------------------

In addition to the command line, configuration variables can be explicitly set in:

- ``~/.nvtest``.
- ``./nvtest.cfg``

``~/.nvtest`` is the "global" configuration scope while ``./nvtest.cfg`` is the
"local" configuration scope.  The order of precedence for configuration scopes
is

1. Command line
2. Local configuration
3. Global configuration

.. note::

   There is also a "session" configuration scope that is written when a test
   session is created.  The values therein are set by the local configuration
   when the session is launched and take precedence in future invocations.

.. code-block:: ini

   [config]
   debug = false  # (bool)
   log_level = INFO  # (str)

   [batch]
   length = 1800 # (float)

   [test:timeout]
   fast = T  # (number or str) default: 30s
   long = T  # (number or str) default: 10m
   default = T  # (number or str) default: 5m

   [variables]
   var = value # (str) environment variables to set for the test session

   [machine]
   cores_per_socket = N  # (int) default determined from system probe
   sockets_per_node = N  # (int) default: 1
   gpus_per_socket = N  # (int)
   cpu_count = N  # (int) default determined from system probe
   gpu_count = N  # (int) default determined from system probe
   node_count = N  # (int) default determined from system probe

  [build]
   type = ... # str
   date = ... # str

   [build:compiler]
   vendor = ... # str
   version = ... # str

   [build:compiler:paths]
   cc = ... # str
   cxx = ... # str
   fc = ... # str

   [build:options]
   opt = ... # str

.. note::

   The build configuration fields should be generated by :ref:`nvtest's CMake
   integration <howto-cmake-integration>`.

Setting configuration variables in your environment
---------------------------------------------------

Configuration settings can be set via environment variable by naming the variable ``NVTEST_<SECTION>_<NAME>=<VALUE>``, where ``SECTION`` is a configuration section and ``NAME`` is the configuration variable name.  Eg,

.. code-block:: console

   export NVTEST_MACHINE_CPU_COUNT=20
   export NVTEST_LOG_LEVEL=DEBUG

.. note::

   Configuration settings set in the environment take precedence over configuration settings set in a file.

Setting configuration variables on the command line
---------------------------------------------------

Use yaml path syntax to set any of the above variables.  For example,

.. code-block:: console

   nvtest -c machine:cpu_count:20 -c config:log_level:DEBUG SUBCOMMAND [OPTIONS] ARGUMENTS

To set environment variables do

.. code-block:: console

   nvtest -e VAR1=VAL1 -e VAR2=VAL2 SUBCOMMAND [OPTIONS] ARGUMENTS

.. note::

   Configuration settings set on the command line take precedence over environment configuration settings.
